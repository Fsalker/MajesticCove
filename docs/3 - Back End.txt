--------------------------------------------------------------------------------------------------------------------------------

                                Back End

        All API's go here.

--------------------------------------------------------------------------------------------------------------------------------

            /Register

    >Registers an user

    Input:
        user: string
        pass: string

    Output:
        [!200] error message: string
         [200] {ssid: string, userid: string}

--------------------------------------------------------------------------------------------------------------------------------

            /Login

    >Logs in an user

    Input:
        user: string
        pass: string

    Output:
        [!200] error message: string
         [200] {ssid: string, userid: string}

--------------------------------------------------------------------------------------------------------------------------------

            /Logout

    >Logs out an user and destroys the ssid

    Input:
        user: string
        ssid: string

    Output:
        [!200] error message: string
         [200] {}

--------------------------------------------------------------------------------------------------------------------------------

            /addDefinition

    >User adds a new word definition

    Input:
        userid: string
        ssid: string
        word: string
        definition: string

    Output:
        [!200] error message: string
         [200] {}

--------------------------------------------------------------------------------------------------------------------------------

            /showMyDefinitions

    >Get user's definitions

    Input:
        userid: string
        ssid: string

    Output:
        [!200] error message: string
         [200] [definition]

--------------------------------------------------------------------------------------------------------------------------------

            /deleteMyDefinition

    >Deletes an user's own definition

    Input:
        userid: string
        ssid: string
        definitionid: string

    Output:
        [!200] error message: string
         [200] {}

--------------------------------------------------------------------------------------------------------------------------------

            /getWordDefinitions

    >Get all definitions for a given word. If there are no definitions, an auto-correct is attempted 
        (hence why we also answer back with the 'word' string)

    Input:
        word: string

    Output:
        [!200] error message: string
         [200] [definition]

--------------------------------------------------------------------------------------------------------------------------------

            /voteDefinition

    >User thumbs up or thumbs down a definition

    Input:
        userid: string
        ssid: string
        definitionId: string
        likes: bool
        ownerUserId: string

    Output:
        [!200] error message: string
         [200] {}

--------------------------------------------------------------------------------------------------------------------------------

    definition = {_id: string, word: string, definition: string, rating: int, userid: string, userkarma: int}

--------------------------------------------------------------------------------------------------------------------------------

[!200] - error during request
 [200] - request succesful

--------------------------------------------------------------------------------------------------------------------------------